#!/usr/bin/perl -w

use strict;
require q{login.pl};
use HTML::Entities;
use POSIX;

print qq{Content-type: text/html\n\n};

print_header( q{First-week writing assignment (Therac 25)} );

my $dbh = &database;

my ( $sunetid, $display_name, $first_name, $class ) = login ( $dbh );

print qq{<h4>Welcome, ${first_name} (${class}).</h4><p>};

print q{To prepare for the first week of class, please read the paper <a href="http://sunnyday.mit.edu/papers/therac.pdf">Medical Devices: the Therac-25</a> (1995), by Nancy Leveson. We suggest reading the paper in multiple passes, to get the outline and larger points before diving in to the details. Start with a quick scan by reading the introduction, the bolded headings, and all of the figures. Scan the last section (&ldquo;Causal Factors&rdquo;). Get an idea of the larger structure and message of the paper. Then, read the paper fully from the beginning. Take notes as you read. What do you find surprising? Are there statements you disagree with? What larger points is the author trying to make?<p>};

print q{<b>Writing assignment:</b> You have been hired as an intern at a medical-device manufacturer. You receive the following memo from your boss:<p>};

print qq{<div class="well">
<b>To:</b> ${display_name}<br>
<b>From:</b> The Boss<br>
<b>Subject:</b> Request for memo re: Therac 25<br><br>

We are aware of a series of tragic incidents related to the Therac 25 linac, and curious what implications this case study may have for our own medical-device business. Please prepare a 400-word technical memo for our engineering and management staff on the following topics.<p>

<ol type="a">
<li>What should our staff know about the Therac 25 and these incidents?

<li>What is one engineering recommendation you would make to our technical staff, as a result of these incidents? <span class="text-muted">Support this recommendation with persuasive evidence.</span>

<li>What is one procedural recommendation you would make to our management staff, as a result of these incidents? <span class="text-muted">Support this recommendation with persuasive evidence.</span>
</ol>
</div><p>};

print <<"END";
Please:
<ul>
<li>Write your memo below, and submit by noon on January 10, 2018.</li>
<li>Respect the requested word-count (plus or minus 5%).</li>
<li>Write your response in the style of a readable business memo. You may use this <a href="example-memo-format.pdf">example of the format</a> as a reference.</li>
</ul>
<p><hr><p>
END


my $text = qq{<b>To:</b> The Boss<br><b>From:</b> ${display_name}<br><b>Subject:</b> Re: Request for memo re: Therac 25<br><br>[memo goes here]};
my $timestamp = q{never};

my $lastversion = $dbh->prepare( q{SELECT contents, EXTRACT(EPOCH FROM submitted) AS timestamp FROM writing WHERE sunetid = ? AND assignment = ? ORDER BY submitted DESC LIMIT 1} ) or die qq{$DBI::errstr};

$lastversion->execute( $sunetid, q{therac} ) or die qq{$DBI::errstr};

if ( my $data = $lastversion->fetchrow_hashref ) {
    $text = HTML::Entities::encode_entities( $data->{ contents } );
    $timestamp = POSIX::strftime( q{%B %e, %I:%M %p}, localtime $data->{ timestamp } );
    $timestamp =~ s{AM}{a.m.}g;}
    $timestamp =~ s{PM}{p.m.}g;


print <<"END";
<script type="text/javascript">
var update_wordcount = function( text ) {
   text2 = text.replace( /[ \\t\\n]+/g, " " );
   var wordcount = text2.split( " " ).length;
   wordcount = Math.round( wordcount / 10.0 ) * 10;
   document.getElementById("wordcount").innerHTML = wordcount;
};

var orig_text = "";

var reset_orig_text = function() {
   orig_text = document.getElementById("trix-editor").editor.element.innerHTML;
};

var is_clean = function() {
   return orig_text === document.getElementById("trix-editor").editor.element.innerHTML;
};

var update_dirty = function() {
   document.getElementById("dirty").innerHTML = is_clean() ? "" : "(you have unsaved changes)";
   document.getElementById("submitbutton").disabled = is_clean();
};

document.addEventListener("trix-change", function() { update_wordcount( document.getElementById("trix-editor").editor.getDocument().toString() ); update_dirty(); } );

document.addEventListener("trix-initialize", function() {
   update_wordcount( document.getElementById("trix-editor").editor.getDocument().toString() );
   reset_orig_text();
   update_dirty();
} );

window.addEventListener("beforeunload", function( event ) {
   if ( !is_clean() ) {
      event.preventDefault();
      event.returnValue = "You have unsaved changes.";
      return "You have unsaved changes.";
   }
});
</script>

<style type="text/css">
#submitbutton[disabled] {
        cursor: not-allowed;
        pointer-events: none;

        /*Button disabled - CSS color class*/
        color: #c0c0c0;
}
</style>

<form action='/submit' method='post' onsubmit="reset_orig_text()">
<input id='default' type='hidden' name='content' value='${text}'>
<trix-editor id='trix-editor' input='default'></trix-editor>
<input name='assignment' type='hidden' value='therac'><br>
<div class="col-md-7"><span class="text-muted">Word count:</span> about <span id="wordcount"></span>.<br><span class="text-muted">Last saved:</span> ${timestamp}</span> <span id="dirty"></span></div>
<div class="col-md-5"><div align="right"><input id='submitbutton' type='submit' value='Save' disabled='true'><br><span class="text-muted">(can continue to edit until the deadline)</span></div></div>
</form>
END

&finish;
