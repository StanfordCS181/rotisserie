#!/usr/bin/perl -w

use strict;
require q{login.pl};
use HTML::Entities;
use POSIX;

print qq{Content-type: text/html\n\n};

print_header( q{The Trolley Problem (short response)} );

my $dbh = &database;

my ( $sunetid, $display_name, $first_name, $class ) = login ( $dbh );

print qq{<h4>Welcome, ${first_name}.</h4><p>};

print q{Please read the article <a href="https://cs181.keithw.org/trolley.pdf">The Trolley Problem</a>, by Judith Jarvis Thomson.<p>};

print q{Please also read the handout <a href="http://www2.econ.iastate.edu/classes/econ362/hallam/CaseStudies/Trolleys.pdf">&ldquo;Trolley Problems and Other Difficult Moral Questions&rdquo;</a> from Iowa State.<p>};

print q{<b>Short response (150 words):</b> Please flip a coin once.

<ul><li>If the coin came up heads, argue persuasively that a manufacturer of self-driving cars should design the car&lsquo;s
accident-response logic with the view that &ldquo;all lives have equal value&rdquo;. Cite to the above memos or
to real-world evidence if helpful.</li>

<li>If the coin came up tails, argue persuasively that a manufacturer of
self-driving cars should prioritize the lives of people inside the car. Cite to the above memos or to real-world
evidence if helpful.</li>

</ul>};

print q{Please save your memo before class on Wednesday, January 18.<p><hr><p>};

my $text = qq{<b>Coin came up:</b> [please fill in heads or tails]<p>};
my $timestamp = q{never};

my $lastversion = $dbh->prepare( q{SELECT contents, EXTRACT(EPOCH FROM submitted) AS timestamp FROM writing WHERE sunetid = ? AND assignment = ? ORDER BY submitted DESC LIMIT 1} ) or die qq{$DBI::errstr};

$lastversion->execute( $sunetid, q{trolley} ) or die qq{$DBI::errstr};

if ( my $data = $lastversion->fetchrow_hashref ) {
    $text = HTML::Entities::encode_entities( $data->{ contents } );
    $timestamp = POSIX::strftime( q{%B %e, %I:%M %p}, localtime $data->{ timestamp } );
    $timestamp =~ s{AM}{a.m.}g;}
    $timestamp =~ s{PM}{p.m.}g;


print <<"END";
<script type="text/javascript">
var update_wordcount = function( text ) {
   text2 = text.replace( /[ \\t\\n]+/g, " " );
   var wordcount = text2.split( " " ).length;
   wordcount = Math.round( wordcount / 10.0 ) * 10;
   document.getElementById("wordcount").innerHTML = wordcount;
};

var orig_text = "";

var reset_orig_text = function() {
   orig_text = document.getElementById("trix-editor").editor.element.innerHTML;
};

var is_clean = function() {
   return orig_text === document.getElementById("trix-editor").editor.element.innerHTML;
};

var update_dirty = function() {
   document.getElementById("dirty").innerHTML = is_clean() ? "" : "(you have unsaved changes)";
   document.getElementById("submitbutton").disabled = is_clean();
};

document.addEventListener("trix-change", function() { update_wordcount( document.getElementById("trix-editor").editor.getDocument().toString() ); update_dirty(); } );

document.addEventListener("trix-initialize", function() {
   update_wordcount( document.getElementById("trix-editor").editor.getDocument().toString() );
   reset_orig_text();
   update_dirty();
} );

window.addEventListener("beforeunload", function( event ) {
   if ( !is_clean() ) {
      event.preventDefault();
      event.returnValue = "You have unsaved changes.";
      return "You have unsaved changes.";
   }
});
</script>

<style type="text/css">
#submitbutton[disabled] {
        cursor: not-allowed;
        pointer-events: none;

        /*Button disabled - CSS color class*/
        color: #c0c0c0;
}
</style>

<form action='/submit' method='post' onsubmit="reset_orig_text()">
<input id='default' type='hidden' name='content' value='${text}'>
<trix-editor id='trix-editor' input='default'></trix-editor>
<input name='assignment' type='hidden' value='trolley'><br>
<div class="col-md-7"><span class="text-muted">Word count:</span> about <span id="wordcount"></span>.<br><span class="text-muted">Last saved:</span> ${timestamp}</span> <span id="dirty"></span></div>
<div class="col-md-5"><div align="right"><input id='submitbutton' type='submit' value='Save' disabled='true'><br><span class="text-muted">(can continue to edit until the deadline)</span></div></div>
</form>
END

&finish;
